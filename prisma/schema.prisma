// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  type          String         @default("verkkokurssi")
  originalPrice Int            @default(1)
  price         Int            @default(1)
  imageUrl      String         @default("")
  activationUrl String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  OrderProduct  OrderProduct[]
}

// When creating the quantity and the price are added separated by colon : after the productId
// separated by colon :.
model OrderProduct {
  id        String   @id @map("_id")
  quantity  Int      @default(1)
  price     Int      @default(1)
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  orders    Order[]  @relation(fields: [orderIds], references: [id])
  orderIds  String[] @db.ObjectId
}

model Order {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  reference  String         @unique
  products   OrderProduct[] @relation(fields: [productIds], references: [id])
  productIds String[]
  totalPrice Int            @default(0) @db.Int
  provider   String         @default("Odottaa valintaa")
  status     String         @default("kesken")
  customer   Customer       @relation(fields: [customerId], references: [id], onUpdate: Cascade)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  customerId String         @db.ObjectId
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  phone     String
  city      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}
